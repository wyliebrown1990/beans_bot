services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: wyliebrown
      POSTGRES_PASSWORD: test123
      POSTGRES_DB: interview_bot
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - beans_bot_network
    restart: always

  auth-service:
    image: wyliebrown1990/auth-service
    command: gunicorn -b 0.0.0.0:5010 app:app
    ports:
      - "5010:5010"
    env_file:
      - .env
    environment:
      - ENV=production
      - DOCKER_DATABASE_URL=postgresql://wyliebrown:test123@postgres:5432/interview_bot
    depends_on:
      - postgres
    networks:
      - beans_bot_network
    restart: always

  interview-service:
    image: wyliebrown1990/interview-service
    command: gunicorn -b 0.0.0.0:5013 app:app
    ports:
      - "5013:5013"
    env_file:
      - .env
    environment:
      - ENV=production
      - DOCKER_DATABASE_URL=postgresql://wyliebrown:test123@postgres:5432/interview_bot
    depends_on:
      - postgres
    networks:
      - beans_bot_network
    restart: always

  training-data-service:
    image: wyliebrown1990/training-data-service
    command: gunicorn -b 0.0.0.0:5011 app:app
    ports:
      - "5011:5011"
    env_file:
      - .env
    environment:
      - ENV=production
      - DOCKER_DATABASE_URL=postgresql://wyliebrown:test123@postgres:5432/interview_bot
    depends_on:
      - postgres
    networks:
      - beans_bot_network
    restart: always

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - auth-service
      - interview-service
      - training-data-service
    networks:
      - beans_bot_network
    restart: always

volumes:
  pgdata:

networks:
  beans_bot_network:
    driver: bridge
